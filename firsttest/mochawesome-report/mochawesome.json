{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-18T21:53:38.559Z",
    "end": "2024-04-18T21:53:40.796Z",
    "duration": 2237,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "88593242-b223-4d02-aa13-89465c0abb76",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ef954ecd-d7f2-4e39-b6f3-77f627d8f553",
          "title": "add todo tests",
          "fullFile": "/Users/swapnil/Selenium /firsttest/test/firstTest.js",
          "file": "/test/firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to the application",
              "fullTitle": "add todo tests successfully adds a todo to the application",
              "timedOut": null,
              "duration": 1697,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"learn selenium\", Key.RETURN);\n// assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText();\nassert.strictEqual(todoText, \"learn selenium\");\n// close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "4fbeeaa2-a455-4a38-bfc1-fd0a8b85415f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fbeeaa2-a455-4a38-bfc1-fd0a8b85415f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1697,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "e6fd2cb3-6d19-47b7-a449-c2272d8eaf6b",
          "title": "add google home page tests",
          "fullFile": "/Users/swapnil/Selenium /firsttest/test/googleTest.js",
          "file": "/test/googleTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully land on google page & search",
              "fullTitle": "add google home page tests successfully land on google page & search",
              "timedOut": null,
              "duration": 2085,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://www.google.com/\");\n// // add a todo\n// await driver\n//   .findElement(By.id(\"sampletodotext\"))\n//   .sendKeys(\"learn selenium\", Key.RETURN);\n// // assert\n// let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText();\n// assert.strictEqual(todoText, \"learn selenium\");\n// close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "8bd44e3d-ca06-4f27-8398-eb93dd000cc4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8bd44e3d-ca06-4f27-8398-eb93dd000cc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2085,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}
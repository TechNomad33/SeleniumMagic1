Assertions 
What are assertions and why do we need them?
Assertions are a mechanism for us to be able to validate the state of out application
eg: you could use an assertion to check that a url has changed following a successful login


Node Assertion Library
Writing assertions using built-in Library

Chai Assertions
Writing assertions using Chai
Chai is a popular assertion Library
Three functions:
should
expect 
assert 
Install chai 
npm install chai

Intro  to Test frameworks
What is a Test framework? Why do we use them?

Intro to Mocha
How we can use Mocha

Adding Mocha to our test
Updating our test to use Mocha

Running our test
Running our test for the first time using Mocha

// https://jaydevs.com/top-javascript-testing-frameworks/
JS Testing framework:
Jasmine
Jest
Mocha

Intro to mocha
Mocha is a testing library for Node. js, created to be a simple, 
extensible, and fast. It's used for unit and integration testing,
and it's a great candidate for BDD (Behavior Driven Development).
Chai is an assertion library that is used chiefly alongside Mocha. 
It can be used as a BDD / TDD assertion library for NodeJS

Parallel executions
support test retires
test reporting

Two main functions mocha provides: describe and it
describe("This is a describe block to group test", function(){
    it("This is an it block which represents our test", function(){
        // Test code goes here
    } )
})

it function sits inside describe
One describe has as many its 

Running the test using mocha:
npx mocha --no-timeouts 'tests/*.js' // all the files
npx mocha --no-timeouts 'tests/firstTest.js' // only one file
By default mocha actually looks for a directory called test within the project
and it fill find any mocker tests inside of that directory
Rename the directory as test instead of tests
npx mocha --no-timeouts // no need to specify directory to run all tests

You can update the package.json to run the script on it own
"scripts": {
    "test": "mocha --no-timeouts"
  }
use npm test // to run the test 

https://www.headspin.io/blog/webdriverio-tutorial-selenium-automation